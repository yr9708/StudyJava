DROP TABLE M;
DROP TABLE S;
DROP TABLE X;



CREATE TABLE M
(M1 CHAR(6), M2 VARCHAR(10));
CREATE TABLE S
(S1 CHAR(6), S2 VARCHAR(10));
CREATE TABLE X
(X1 CHAR(6), X2 VARCHAR(10));

INSERT INTO M VALUES('A','1');
INSERT INTO M VALUES('B','1');
INSERT INTO M VALUES('C','3');
INSERT INTO M VALUES(NULL, '3'); 

INSERT INTO S VALUES('A','X');
INSERT INTO S VALUES('B','Y');
INSERT INTO S VALUES(NULL, 'Z');

INSERT INTO X VALUES('A','DATA');

SELECT * FROM X;




SELECT * FROM M INNER JOIN S ON M1=S1;--NULL은 연산에 포함되지 않기 때문에 같은 값으로 치지 않는다.

SELECT * FROM M CROSS JOIN S; --만들어질 수 있는 모든 조합이 나옴
SELECT * FROM M,S; --오라클 JOIN이다. CROSSJOIN인과 같은 값이 나옴

SELECT* FROM M,S
WHERE M1=S1; --INNER JOIN과 똑같이 나옴

SELECT * FROM M LEFT OUTER JOIN S ON M1=S1;
SELECT * FROM M,S WHERE M1=S1(+);

SELECT * FROM M RIGHT OUTER JOIN S ON M1=S1;
SELECT * FROM M,S WHERE M1(+)=S1;

SELECT * FROM SALGRADE; 

--사원의 월급이 몇등급인지 출력 : 사원이름, 월급, 등급
SELECT ENAME,SAL,GRADE
FROM EMP JOIN SALGRADE 
ON (SAL BETWEEN LOSAL AND HISAL); 


--SELF JOIN 총결과11개
SELECT 사원.EMPNO, 사원.ENAME, 관리자.EMPNO,관리자.ENAME
FROM EMP 사원, EMP 관리자
WHERE 사원.MGR=관리자.EMPNO;

--LEFT OUTER JOIN 총결과 12개
SELECT 사원.EMPNO, 사원.ENAME, 관리자.EMPNO,관리자.ENAME
FROM EMP 사원, EMP 관리자
WHERE 사원.MGR=관리자.EMPNO(+);


SELECT * FROM EMP;

SELECT ENAME, SAL, CASE WHEN SAL <= 1000 THEN '초급'
WHEN SAL <= 2000 THEN '중급' ELSE '고급' END AS 조건
FROM EMP;













